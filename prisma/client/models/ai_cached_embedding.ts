
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `ai_cached_embedding` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ai_cached_embedding
 * 
 */
export type ai_cached_embeddingModel = runtime.Types.Result.DefaultSelection<Prisma.$ai_cached_embeddingPayload>

export type AggregateAi_cached_embedding = {
  _count: Ai_cached_embeddingCountAggregateOutputType | null
  _min: Ai_cached_embeddingMinAggregateOutputType | null
  _max: Ai_cached_embeddingMaxAggregateOutputType | null
}

export type Ai_cached_embeddingMinAggregateOutputType = {
  id: string | null
  created_at: Date | null
  updated_at: Date | null
  text: string | null
}

export type Ai_cached_embeddingMaxAggregateOutputType = {
  id: string | null
  created_at: Date | null
  updated_at: Date | null
  text: string | null
}

export type Ai_cached_embeddingCountAggregateOutputType = {
  id: number
  created_at: number
  updated_at: number
  text: number
  feature_type: number
  _all: number
}


export type Ai_cached_embeddingMinAggregateInputType = {
  id?: true
  created_at?: true
  updated_at?: true
  text?: true
}

export type Ai_cached_embeddingMaxAggregateInputType = {
  id?: true
  created_at?: true
  updated_at?: true
  text?: true
}

export type Ai_cached_embeddingCountAggregateInputType = {
  id?: true
  created_at?: true
  updated_at?: true
  text?: true
  feature_type?: true
  _all?: true
}

export type Ai_cached_embeddingAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ai_cached_embedding to aggregate.
   */
  where?: Prisma.ai_cached_embeddingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ai_cached_embeddings to fetch.
   */
  orderBy?: Prisma.ai_cached_embeddingOrderByWithRelationInput | Prisma.ai_cached_embeddingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ai_cached_embeddingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ai_cached_embeddings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ai_cached_embeddings.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ai_cached_embeddings
  **/
  _count?: true | Ai_cached_embeddingCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Ai_cached_embeddingMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Ai_cached_embeddingMaxAggregateInputType
}

export type GetAi_cached_embeddingAggregateType<T extends Ai_cached_embeddingAggregateArgs> = {
      [P in keyof T & keyof AggregateAi_cached_embedding]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAi_cached_embedding[P]>
    : Prisma.GetScalarType<T[P], AggregateAi_cached_embedding[P]>
}




export type ai_cached_embeddingGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ai_cached_embeddingWhereInput
  orderBy?: Prisma.ai_cached_embeddingOrderByWithAggregationInput | Prisma.ai_cached_embeddingOrderByWithAggregationInput[]
  by: Prisma.Ai_cached_embeddingScalarFieldEnum[] | Prisma.Ai_cached_embeddingScalarFieldEnum
  having?: Prisma.ai_cached_embeddingScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Ai_cached_embeddingCountAggregateInputType | true
  _min?: Ai_cached_embeddingMinAggregateInputType
  _max?: Ai_cached_embeddingMaxAggregateInputType
}

export type Ai_cached_embeddingGroupByOutputType = {
  id: string
  created_at: Date
  updated_at: Date
  text: string
  feature_type: $Enums.embedding_feature_type[]
  _count: Ai_cached_embeddingCountAggregateOutputType | null
  _min: Ai_cached_embeddingMinAggregateOutputType | null
  _max: Ai_cached_embeddingMaxAggregateOutputType | null
}

type GetAi_cached_embeddingGroupByPayload<T extends ai_cached_embeddingGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Ai_cached_embeddingGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Ai_cached_embeddingGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Ai_cached_embeddingGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Ai_cached_embeddingGroupByOutputType[P]>
      }
    >
  >



export type ai_cached_embeddingWhereInput = {
  AND?: Prisma.ai_cached_embeddingWhereInput | Prisma.ai_cached_embeddingWhereInput[]
  OR?: Prisma.ai_cached_embeddingWhereInput[]
  NOT?: Prisma.ai_cached_embeddingWhereInput | Prisma.ai_cached_embeddingWhereInput[]
  id?: Prisma.StringFilter<"ai_cached_embedding"> | string
  created_at?: Prisma.DateTimeFilter<"ai_cached_embedding"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"ai_cached_embedding"> | Date | string
  text?: Prisma.StringFilter<"ai_cached_embedding"> | string
  feature_type?: Prisma.Enumembedding_feature_typeNullableListFilter<"ai_cached_embedding">
  ai_embedding_search_diagnostics?: Prisma.Ai_embedding_search_diagnosticListRelationFilter
  facts?: Prisma.FactListRelationFilter
}

export type ai_cached_embeddingOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  text?: Prisma.SortOrder
  feature_type?: Prisma.SortOrder
  ai_embedding_search_diagnostics?: Prisma.ai_embedding_search_diagnosticOrderByRelationAggregateInput
  facts?: Prisma.factOrderByRelationAggregateInput
}

export type ai_cached_embeddingWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  text?: string
  AND?: Prisma.ai_cached_embeddingWhereInput | Prisma.ai_cached_embeddingWhereInput[]
  OR?: Prisma.ai_cached_embeddingWhereInput[]
  NOT?: Prisma.ai_cached_embeddingWhereInput | Prisma.ai_cached_embeddingWhereInput[]
  created_at?: Prisma.DateTimeFilter<"ai_cached_embedding"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"ai_cached_embedding"> | Date | string
  feature_type?: Prisma.Enumembedding_feature_typeNullableListFilter<"ai_cached_embedding">
  ai_embedding_search_diagnostics?: Prisma.Ai_embedding_search_diagnosticListRelationFilter
  facts?: Prisma.FactListRelationFilter
}, "id" | "text">

export type ai_cached_embeddingOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  text?: Prisma.SortOrder
  feature_type?: Prisma.SortOrder
  _count?: Prisma.ai_cached_embeddingCountOrderByAggregateInput
  _max?: Prisma.ai_cached_embeddingMaxOrderByAggregateInput
  _min?: Prisma.ai_cached_embeddingMinOrderByAggregateInput
}

export type ai_cached_embeddingScalarWhereWithAggregatesInput = {
  AND?: Prisma.ai_cached_embeddingScalarWhereWithAggregatesInput | Prisma.ai_cached_embeddingScalarWhereWithAggregatesInput[]
  OR?: Prisma.ai_cached_embeddingScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ai_cached_embeddingScalarWhereWithAggregatesInput | Prisma.ai_cached_embeddingScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ai_cached_embedding"> | string
  created_at?: Prisma.DateTimeWithAggregatesFilter<"ai_cached_embedding"> | Date | string
  updated_at?: Prisma.DateTimeWithAggregatesFilter<"ai_cached_embedding"> | Date | string
  text?: Prisma.StringWithAggregatesFilter<"ai_cached_embedding"> | string
  feature_type?: Prisma.Enumembedding_feature_typeNullableListFilter<"ai_cached_embedding">
}

export type ai_cached_embeddingUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  text?: Prisma.StringFieldUpdateOperationsInput | string
  feature_type?: Prisma.ai_cached_embeddingUpdatefeature_typeInput | $Enums.embedding_feature_type[]
  ai_embedding_search_diagnostics?: Prisma.ai_embedding_search_diagnosticUpdateManyWithoutSearch_embeddingNestedInput
  facts?: Prisma.factUpdateManyWithoutEmbeddingNestedInput
}

export type ai_cached_embeddingUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  text?: Prisma.StringFieldUpdateOperationsInput | string
  feature_type?: Prisma.ai_cached_embeddingUpdatefeature_typeInput | $Enums.embedding_feature_type[]
  ai_embedding_search_diagnostics?: Prisma.ai_embedding_search_diagnosticUncheckedUpdateManyWithoutSearch_embeddingNestedInput
  facts?: Prisma.factUncheckedUpdateManyWithoutEmbeddingNestedInput
}

export type ai_cached_embeddingUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  text?: Prisma.StringFieldUpdateOperationsInput | string
  feature_type?: Prisma.ai_cached_embeddingUpdatefeature_typeInput | $Enums.embedding_feature_type[]
}

export type ai_cached_embeddingUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  text?: Prisma.StringFieldUpdateOperationsInput | string
  feature_type?: Prisma.ai_cached_embeddingUpdatefeature_typeInput | $Enums.embedding_feature_type[]
}

export type Ai_cached_embeddingScalarRelationFilter = {
  is?: Prisma.ai_cached_embeddingWhereInput
  isNot?: Prisma.ai_cached_embeddingWhereInput
}

export type Enumembedding_feature_typeNullableListFilter<$PrismaModel = never> = {
  equals?: $Enums.embedding_feature_type[] | Prisma.ListEnumembedding_feature_typeFieldRefInput<$PrismaModel> | null
  has?: $Enums.embedding_feature_type | Prisma.Enumembedding_feature_typeFieldRefInput<$PrismaModel> | null
  hasEvery?: $Enums.embedding_feature_type[] | Prisma.ListEnumembedding_feature_typeFieldRefInput<$PrismaModel>
  hasSome?: $Enums.embedding_feature_type[] | Prisma.ListEnumembedding_feature_typeFieldRefInput<$PrismaModel>
  isEmpty?: boolean
}

export type ai_cached_embeddingCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  text?: Prisma.SortOrder
  feature_type?: Prisma.SortOrder
}

export type ai_cached_embeddingMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  text?: Prisma.SortOrder
}

export type ai_cached_embeddingMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  text?: Prisma.SortOrder
}

export type ai_cached_embeddingCreateNestedOneWithoutFactsInput = {
  connect?: Prisma.ai_cached_embeddingWhereUniqueInput
}

export type ai_cached_embeddingUpdateOneRequiredWithoutFactsNestedInput = {
  connect?: Prisma.ai_cached_embeddingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ai_cached_embeddingUpdateToOneWithWhereWithoutFactsInput, Prisma.ai_cached_embeddingUpdateWithoutFactsInput>, Prisma.ai_cached_embeddingUncheckedUpdateWithoutFactsInput>
}

export type ai_cached_embeddingUpdatefeature_typeInput = {
  set?: $Enums.embedding_feature_type[]
  push?: $Enums.embedding_feature_type | $Enums.embedding_feature_type[]
}

export type ai_cached_embeddingCreateNestedOneWithoutAi_embedding_search_diagnosticsInput = {
  connect?: Prisma.ai_cached_embeddingWhereUniqueInput
}

export type ai_cached_embeddingUpdateOneRequiredWithoutAi_embedding_search_diagnosticsNestedInput = {
  connect?: Prisma.ai_cached_embeddingWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ai_cached_embeddingUpdateToOneWithWhereWithoutAi_embedding_search_diagnosticsInput, Prisma.ai_cached_embeddingUpdateWithoutAi_embedding_search_diagnosticsInput>, Prisma.ai_cached_embeddingUncheckedUpdateWithoutAi_embedding_search_diagnosticsInput>
}

export type ai_cached_embeddingUpdateToOneWithWhereWithoutFactsInput = {
  where?: Prisma.ai_cached_embeddingWhereInput
  data: Prisma.XOR<Prisma.ai_cached_embeddingUpdateWithoutFactsInput, Prisma.ai_cached_embeddingUncheckedUpdateWithoutFactsInput>
}

export type ai_cached_embeddingUpdateWithoutFactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  text?: Prisma.StringFieldUpdateOperationsInput | string
  feature_type?: Prisma.ai_cached_embeddingUpdatefeature_typeInput | $Enums.embedding_feature_type[]
  ai_embedding_search_diagnostics?: Prisma.ai_embedding_search_diagnosticUpdateManyWithoutSearch_embeddingNestedInput
}

export type ai_cached_embeddingUncheckedUpdateWithoutFactsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  text?: Prisma.StringFieldUpdateOperationsInput | string
  feature_type?: Prisma.ai_cached_embeddingUpdatefeature_typeInput | $Enums.embedding_feature_type[]
  ai_embedding_search_diagnostics?: Prisma.ai_embedding_search_diagnosticUncheckedUpdateManyWithoutSearch_embeddingNestedInput
}

export type ai_cached_embeddingUpdateToOneWithWhereWithoutAi_embedding_search_diagnosticsInput = {
  where?: Prisma.ai_cached_embeddingWhereInput
  data: Prisma.XOR<Prisma.ai_cached_embeddingUpdateWithoutAi_embedding_search_diagnosticsInput, Prisma.ai_cached_embeddingUncheckedUpdateWithoutAi_embedding_search_diagnosticsInput>
}

export type ai_cached_embeddingUpdateWithoutAi_embedding_search_diagnosticsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  text?: Prisma.StringFieldUpdateOperationsInput | string
  feature_type?: Prisma.ai_cached_embeddingUpdatefeature_typeInput | $Enums.embedding_feature_type[]
  facts?: Prisma.factUpdateManyWithoutEmbeddingNestedInput
}

export type ai_cached_embeddingUncheckedUpdateWithoutAi_embedding_search_diagnosticsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  text?: Prisma.StringFieldUpdateOperationsInput | string
  feature_type?: Prisma.ai_cached_embeddingUpdatefeature_typeInput | $Enums.embedding_feature_type[]
  facts?: Prisma.factUncheckedUpdateManyWithoutEmbeddingNestedInput
}


/**
 * Count Type Ai_cached_embeddingCountOutputType
 */

export type Ai_cached_embeddingCountOutputType = {
  ai_embedding_search_diagnostics: number
  facts: number
}

export type Ai_cached_embeddingCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ai_embedding_search_diagnostics?: boolean | Ai_cached_embeddingCountOutputTypeCountAi_embedding_search_diagnosticsArgs
  facts?: boolean | Ai_cached_embeddingCountOutputTypeCountFactsArgs
}

/**
 * Ai_cached_embeddingCountOutputType without action
 */
export type Ai_cached_embeddingCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Ai_cached_embeddingCountOutputType
   */
  select?: Prisma.Ai_cached_embeddingCountOutputTypeSelect<ExtArgs> | null
}

/**
 * Ai_cached_embeddingCountOutputType without action
 */
export type Ai_cached_embeddingCountOutputTypeCountAi_embedding_search_diagnosticsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ai_embedding_search_diagnosticWhereInput
}

/**
 * Ai_cached_embeddingCountOutputType without action
 */
export type Ai_cached_embeddingCountOutputTypeCountFactsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.factWhereInput
}


export type ai_cached_embeddingSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  created_at?: boolean
  updated_at?: boolean
  text?: boolean
  feature_type?: boolean
  ai_embedding_search_diagnostics?: boolean | Prisma.ai_cached_embedding$ai_embedding_search_diagnosticsArgs<ExtArgs>
  facts?: boolean | Prisma.ai_cached_embedding$factsArgs<ExtArgs>
  _count?: boolean | Prisma.Ai_cached_embeddingCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["ai_cached_embedding"]>


export type ai_cached_embeddingSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  created_at?: boolean
  updated_at?: boolean
  text?: boolean
  feature_type?: boolean
}, ExtArgs["result"]["ai_cached_embedding"]>

export type ai_cached_embeddingSelectScalar = {
  id?: boolean
  created_at?: boolean
  updated_at?: boolean
  text?: boolean
  feature_type?: boolean
}

export type ai_cached_embeddingOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "created_at" | "updated_at" | "text" | "feature_type", ExtArgs["result"]["ai_cached_embedding"]>
export type ai_cached_embeddingInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ai_embedding_search_diagnostics?: boolean | Prisma.ai_cached_embedding$ai_embedding_search_diagnosticsArgs<ExtArgs>
  facts?: boolean | Prisma.ai_cached_embedding$factsArgs<ExtArgs>
  _count?: boolean | Prisma.Ai_cached_embeddingCountOutputTypeDefaultArgs<ExtArgs>
}
export type ai_cached_embeddingIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $ai_cached_embeddingPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ai_cached_embedding"
  objects: {
    ai_embedding_search_diagnostics: Prisma.$ai_embedding_search_diagnosticPayload<ExtArgs>[]
    facts: Prisma.$factPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    created_at: Date
    updated_at: Date
    text: string
    feature_type: $Enums.embedding_feature_type[]
  }, ExtArgs["result"]["ai_cached_embedding"]>
  composites: {}
}

export type ai_cached_embeddingGetPayload<S extends boolean | null | undefined | ai_cached_embeddingDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ai_cached_embeddingPayload, S>

export type ai_cached_embeddingCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ai_cached_embeddingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Ai_cached_embeddingCountAggregateInputType | true
  }

export interface ai_cached_embeddingDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ai_cached_embedding'], meta: { name: 'ai_cached_embedding' } }
  /**
   * Find zero or one Ai_cached_embedding that matches the filter.
   * @param {ai_cached_embeddingFindUniqueArgs} args - Arguments to find a Ai_cached_embedding
   * @example
   * // Get one Ai_cached_embedding
   * const ai_cached_embedding = await prisma.ai_cached_embedding.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ai_cached_embeddingFindUniqueArgs>(args: Prisma.SelectSubset<T, ai_cached_embeddingFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ai_cached_embeddingClient<runtime.Types.Result.GetResult<Prisma.$ai_cached_embeddingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Ai_cached_embedding that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ai_cached_embeddingFindUniqueOrThrowArgs} args - Arguments to find a Ai_cached_embedding
   * @example
   * // Get one Ai_cached_embedding
   * const ai_cached_embedding = await prisma.ai_cached_embedding.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ai_cached_embeddingFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ai_cached_embeddingFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ai_cached_embeddingClient<runtime.Types.Result.GetResult<Prisma.$ai_cached_embeddingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Ai_cached_embedding that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ai_cached_embeddingFindFirstArgs} args - Arguments to find a Ai_cached_embedding
   * @example
   * // Get one Ai_cached_embedding
   * const ai_cached_embedding = await prisma.ai_cached_embedding.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ai_cached_embeddingFindFirstArgs>(args?: Prisma.SelectSubset<T, ai_cached_embeddingFindFirstArgs<ExtArgs>>): Prisma.Prisma__ai_cached_embeddingClient<runtime.Types.Result.GetResult<Prisma.$ai_cached_embeddingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Ai_cached_embedding that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ai_cached_embeddingFindFirstOrThrowArgs} args - Arguments to find a Ai_cached_embedding
   * @example
   * // Get one Ai_cached_embedding
   * const ai_cached_embedding = await prisma.ai_cached_embedding.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ai_cached_embeddingFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ai_cached_embeddingFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ai_cached_embeddingClient<runtime.Types.Result.GetResult<Prisma.$ai_cached_embeddingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Ai_cached_embeddings that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ai_cached_embeddingFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Ai_cached_embeddings
   * const ai_cached_embeddings = await prisma.ai_cached_embedding.findMany()
   * 
   * // Get first 10 Ai_cached_embeddings
   * const ai_cached_embeddings = await prisma.ai_cached_embedding.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const ai_cached_embeddingWithIdOnly = await prisma.ai_cached_embedding.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ai_cached_embeddingFindManyArgs>(args?: Prisma.SelectSubset<T, ai_cached_embeddingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ai_cached_embeddingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Delete a Ai_cached_embedding.
   * @param {ai_cached_embeddingDeleteArgs} args - Arguments to delete one Ai_cached_embedding.
   * @example
   * // Delete one Ai_cached_embedding
   * const Ai_cached_embedding = await prisma.ai_cached_embedding.delete({
   *   where: {
   *     // ... filter to delete one Ai_cached_embedding
   *   }
   * })
   * 
   */
  delete<T extends ai_cached_embeddingDeleteArgs>(args: Prisma.SelectSubset<T, ai_cached_embeddingDeleteArgs<ExtArgs>>): Prisma.Prisma__ai_cached_embeddingClient<runtime.Types.Result.GetResult<Prisma.$ai_cached_embeddingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Ai_cached_embedding.
   * @param {ai_cached_embeddingUpdateArgs} args - Arguments to update one Ai_cached_embedding.
   * @example
   * // Update one Ai_cached_embedding
   * const ai_cached_embedding = await prisma.ai_cached_embedding.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ai_cached_embeddingUpdateArgs>(args: Prisma.SelectSubset<T, ai_cached_embeddingUpdateArgs<ExtArgs>>): Prisma.Prisma__ai_cached_embeddingClient<runtime.Types.Result.GetResult<Prisma.$ai_cached_embeddingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Ai_cached_embeddings.
   * @param {ai_cached_embeddingDeleteManyArgs} args - Arguments to filter Ai_cached_embeddings to delete.
   * @example
   * // Delete a few Ai_cached_embeddings
   * const { count } = await prisma.ai_cached_embedding.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ai_cached_embeddingDeleteManyArgs>(args?: Prisma.SelectSubset<T, ai_cached_embeddingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Ai_cached_embeddings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ai_cached_embeddingUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Ai_cached_embeddings
   * const ai_cached_embedding = await prisma.ai_cached_embedding.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ai_cached_embeddingUpdateManyArgs>(args: Prisma.SelectSubset<T, ai_cached_embeddingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Ai_cached_embeddings and returns the data updated in the database.
   * @param {ai_cached_embeddingUpdateManyAndReturnArgs} args - Arguments to update many Ai_cached_embeddings.
   * @example
   * // Update many Ai_cached_embeddings
   * const ai_cached_embedding = await prisma.ai_cached_embedding.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Ai_cached_embeddings and only return the `id`
   * const ai_cached_embeddingWithIdOnly = await prisma.ai_cached_embedding.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ai_cached_embeddingUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ai_cached_embeddingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ai_cached_embeddingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>


  /**
   * Count the number of Ai_cached_embeddings.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ai_cached_embeddingCountArgs} args - Arguments to filter Ai_cached_embeddings to count.
   * @example
   * // Count the number of Ai_cached_embeddings
   * const count = await prisma.ai_cached_embedding.count({
   *   where: {
   *     // ... the filter for the Ai_cached_embeddings we want to count
   *   }
   * })
  **/
  count<T extends ai_cached_embeddingCountArgs>(
    args?: Prisma.Subset<T, ai_cached_embeddingCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Ai_cached_embeddingCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Ai_cached_embedding.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Ai_cached_embeddingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Ai_cached_embeddingAggregateArgs>(args: Prisma.Subset<T, Ai_cached_embeddingAggregateArgs>): Prisma.PrismaPromise<GetAi_cached_embeddingAggregateType<T>>

  /**
   * Group by Ai_cached_embedding.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ai_cached_embeddingGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ai_cached_embeddingGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ai_cached_embeddingGroupByArgs['orderBy'] }
      : { orderBy?: ai_cached_embeddingGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ai_cached_embeddingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAi_cached_embeddingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ai_cached_embedding model
 */
readonly fields: ai_cached_embeddingFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ai_cached_embedding.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ai_cached_embeddingClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  ai_embedding_search_diagnostics<T extends Prisma.ai_cached_embedding$ai_embedding_search_diagnosticsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ai_cached_embedding$ai_embedding_search_diagnosticsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ai_embedding_search_diagnosticPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  facts<T extends Prisma.ai_cached_embedding$factsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ai_cached_embedding$factsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$factPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ai_cached_embedding model
 */
export interface ai_cached_embeddingFieldRefs {
  readonly id: Prisma.FieldRef<"ai_cached_embedding", 'String'>
  readonly created_at: Prisma.FieldRef<"ai_cached_embedding", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"ai_cached_embedding", 'DateTime'>
  readonly text: Prisma.FieldRef<"ai_cached_embedding", 'String'>
  readonly feature_type: Prisma.FieldRef<"ai_cached_embedding", 'embedding_feature_type[]'>
}
    

// Custom InputTypes
/**
 * ai_cached_embedding findUnique
 */
export type ai_cached_embeddingFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_cached_embedding
   */
  select?: Prisma.ai_cached_embeddingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_cached_embedding
   */
  omit?: Prisma.ai_cached_embeddingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_cached_embeddingInclude<ExtArgs> | null
  /**
   * Filter, which ai_cached_embedding to fetch.
   */
  where: Prisma.ai_cached_embeddingWhereUniqueInput
}

/**
 * ai_cached_embedding findUniqueOrThrow
 */
export type ai_cached_embeddingFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_cached_embedding
   */
  select?: Prisma.ai_cached_embeddingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_cached_embedding
   */
  omit?: Prisma.ai_cached_embeddingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_cached_embeddingInclude<ExtArgs> | null
  /**
   * Filter, which ai_cached_embedding to fetch.
   */
  where: Prisma.ai_cached_embeddingWhereUniqueInput
}

/**
 * ai_cached_embedding findFirst
 */
export type ai_cached_embeddingFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_cached_embedding
   */
  select?: Prisma.ai_cached_embeddingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_cached_embedding
   */
  omit?: Prisma.ai_cached_embeddingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_cached_embeddingInclude<ExtArgs> | null
  /**
   * Filter, which ai_cached_embedding to fetch.
   */
  where?: Prisma.ai_cached_embeddingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ai_cached_embeddings to fetch.
   */
  orderBy?: Prisma.ai_cached_embeddingOrderByWithRelationInput | Prisma.ai_cached_embeddingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ai_cached_embeddings.
   */
  cursor?: Prisma.ai_cached_embeddingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ai_cached_embeddings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ai_cached_embeddings.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ai_cached_embeddings.
   */
  distinct?: Prisma.Ai_cached_embeddingScalarFieldEnum | Prisma.Ai_cached_embeddingScalarFieldEnum[]
}

/**
 * ai_cached_embedding findFirstOrThrow
 */
export type ai_cached_embeddingFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_cached_embedding
   */
  select?: Prisma.ai_cached_embeddingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_cached_embedding
   */
  omit?: Prisma.ai_cached_embeddingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_cached_embeddingInclude<ExtArgs> | null
  /**
   * Filter, which ai_cached_embedding to fetch.
   */
  where?: Prisma.ai_cached_embeddingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ai_cached_embeddings to fetch.
   */
  orderBy?: Prisma.ai_cached_embeddingOrderByWithRelationInput | Prisma.ai_cached_embeddingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ai_cached_embeddings.
   */
  cursor?: Prisma.ai_cached_embeddingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ai_cached_embeddings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ai_cached_embeddings.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ai_cached_embeddings.
   */
  distinct?: Prisma.Ai_cached_embeddingScalarFieldEnum | Prisma.Ai_cached_embeddingScalarFieldEnum[]
}

/**
 * ai_cached_embedding findMany
 */
export type ai_cached_embeddingFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_cached_embedding
   */
  select?: Prisma.ai_cached_embeddingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_cached_embedding
   */
  omit?: Prisma.ai_cached_embeddingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_cached_embeddingInclude<ExtArgs> | null
  /**
   * Filter, which ai_cached_embeddings to fetch.
   */
  where?: Prisma.ai_cached_embeddingWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ai_cached_embeddings to fetch.
   */
  orderBy?: Prisma.ai_cached_embeddingOrderByWithRelationInput | Prisma.ai_cached_embeddingOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ai_cached_embeddings.
   */
  cursor?: Prisma.ai_cached_embeddingWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ai_cached_embeddings from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ai_cached_embeddings.
   */
  skip?: number
  distinct?: Prisma.Ai_cached_embeddingScalarFieldEnum | Prisma.Ai_cached_embeddingScalarFieldEnum[]
}

/**
 * ai_cached_embedding update
 */
export type ai_cached_embeddingUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_cached_embedding
   */
  select?: Prisma.ai_cached_embeddingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_cached_embedding
   */
  omit?: Prisma.ai_cached_embeddingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_cached_embeddingInclude<ExtArgs> | null
  /**
   * The data needed to update a ai_cached_embedding.
   */
  data: Prisma.XOR<Prisma.ai_cached_embeddingUpdateInput, Prisma.ai_cached_embeddingUncheckedUpdateInput>
  /**
   * Choose, which ai_cached_embedding to update.
   */
  where: Prisma.ai_cached_embeddingWhereUniqueInput
}

/**
 * ai_cached_embedding updateMany
 */
export type ai_cached_embeddingUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ai_cached_embeddings.
   */
  data: Prisma.XOR<Prisma.ai_cached_embeddingUpdateManyMutationInput, Prisma.ai_cached_embeddingUncheckedUpdateManyInput>
  /**
   * Filter which ai_cached_embeddings to update
   */
  where?: Prisma.ai_cached_embeddingWhereInput
  /**
   * Limit how many ai_cached_embeddings to update.
   */
  limit?: number
}

/**
 * ai_cached_embedding updateManyAndReturn
 */
export type ai_cached_embeddingUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_cached_embedding
   */
  select?: Prisma.ai_cached_embeddingSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ai_cached_embedding
   */
  omit?: Prisma.ai_cached_embeddingOmit<ExtArgs> | null
  /**
   * The data used to update ai_cached_embeddings.
   */
  data: Prisma.XOR<Prisma.ai_cached_embeddingUpdateManyMutationInput, Prisma.ai_cached_embeddingUncheckedUpdateManyInput>
  /**
   * Filter which ai_cached_embeddings to update
   */
  where?: Prisma.ai_cached_embeddingWhereInput
  /**
   * Limit how many ai_cached_embeddings to update.
   */
  limit?: number
}

/**
 * ai_cached_embedding delete
 */
export type ai_cached_embeddingDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_cached_embedding
   */
  select?: Prisma.ai_cached_embeddingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_cached_embedding
   */
  omit?: Prisma.ai_cached_embeddingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_cached_embeddingInclude<ExtArgs> | null
  /**
   * Filter which ai_cached_embedding to delete.
   */
  where: Prisma.ai_cached_embeddingWhereUniqueInput
}

/**
 * ai_cached_embedding deleteMany
 */
export type ai_cached_embeddingDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ai_cached_embeddings to delete
   */
  where?: Prisma.ai_cached_embeddingWhereInput
  /**
   * Limit how many ai_cached_embeddings to delete.
   */
  limit?: number
}

/**
 * ai_cached_embedding.ai_embedding_search_diagnostics
 */
export type ai_cached_embedding$ai_embedding_search_diagnosticsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_embedding_search_diagnostic
   */
  select?: Prisma.ai_embedding_search_diagnosticSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_embedding_search_diagnostic
   */
  omit?: Prisma.ai_embedding_search_diagnosticOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_embedding_search_diagnosticInclude<ExtArgs> | null
  where?: Prisma.ai_embedding_search_diagnosticWhereInput
  orderBy?: Prisma.ai_embedding_search_diagnosticOrderByWithRelationInput | Prisma.ai_embedding_search_diagnosticOrderByWithRelationInput[]
  cursor?: Prisma.ai_embedding_search_diagnosticWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.Ai_embedding_search_diagnosticScalarFieldEnum | Prisma.Ai_embedding_search_diagnosticScalarFieldEnum[]
}

/**
 * ai_cached_embedding.facts
 */
export type ai_cached_embedding$factsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the fact
   */
  select?: Prisma.factSelect<ExtArgs> | null
  /**
   * Omit specific fields from the fact
   */
  omit?: Prisma.factOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.factInclude<ExtArgs> | null
  where?: Prisma.factWhereInput
  orderBy?: Prisma.factOrderByWithRelationInput | Prisma.factOrderByWithRelationInput[]
  cursor?: Prisma.factWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FactScalarFieldEnum | Prisma.FactScalarFieldEnum[]
}

/**
 * ai_cached_embedding without action
 */
export type ai_cached_embeddingDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_cached_embedding
   */
  select?: Prisma.ai_cached_embeddingSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_cached_embedding
   */
  omit?: Prisma.ai_cached_embeddingOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_cached_embeddingInclude<ExtArgs> | null
}
