
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/*
 * This file exports the `ai_embedding_search_diagnostic` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import type * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ai_embedding_search_diagnostic
 * 
 */
export type ai_embedding_search_diagnosticModel = runtime.Types.Result.DefaultSelection<Prisma.$ai_embedding_search_diagnosticPayload>

export type AggregateAi_embedding_search_diagnostic = {
  _count: Ai_embedding_search_diagnosticCountAggregateOutputType | null
  _avg: Ai_embedding_search_diagnosticAvgAggregateOutputType | null
  _sum: Ai_embedding_search_diagnosticSumAggregateOutputType | null
  _min: Ai_embedding_search_diagnosticMinAggregateOutputType | null
  _max: Ai_embedding_search_diagnosticMaxAggregateOutputType | null
}

export type Ai_embedding_search_diagnosticAvgAggregateOutputType = {
  min_similarity: number | null
  search_time_ms: number | null
  limit: number | null
}

export type Ai_embedding_search_diagnosticSumAggregateOutputType = {
  min_similarity: number | null
  search_time_ms: number | null
  limit: number | null
}

export type Ai_embedding_search_diagnosticMinAggregateOutputType = {
  id: string | null
  created_at: Date | null
  updated_at: Date | null
  similarity_type: $Enums.vector_similarity_type | null
  min_similarity: number | null
  search_text: string | null
  search_time_ms: number | null
  limit: number | null
  search_embedding_id: string | null
}

export type Ai_embedding_search_diagnosticMaxAggregateOutputType = {
  id: string | null
  created_at: Date | null
  updated_at: Date | null
  similarity_type: $Enums.vector_similarity_type | null
  min_similarity: number | null
  search_text: string | null
  search_time_ms: number | null
  limit: number | null
  search_embedding_id: string | null
}

export type Ai_embedding_search_diagnosticCountAggregateOutputType = {
  id: number
  created_at: number
  updated_at: number
  embedded_content_results: number
  similarity_type: number
  min_similarity: number
  search_text: number
  search_time_ms: number
  limit: number
  search_embedding_id: number
  _all: number
}


export type Ai_embedding_search_diagnosticAvgAggregateInputType = {
  min_similarity?: true
  search_time_ms?: true
  limit?: true
}

export type Ai_embedding_search_diagnosticSumAggregateInputType = {
  min_similarity?: true
  search_time_ms?: true
  limit?: true
}

export type Ai_embedding_search_diagnosticMinAggregateInputType = {
  id?: true
  created_at?: true
  updated_at?: true
  similarity_type?: true
  min_similarity?: true
  search_text?: true
  search_time_ms?: true
  limit?: true
  search_embedding_id?: true
}

export type Ai_embedding_search_diagnosticMaxAggregateInputType = {
  id?: true
  created_at?: true
  updated_at?: true
  similarity_type?: true
  min_similarity?: true
  search_text?: true
  search_time_ms?: true
  limit?: true
  search_embedding_id?: true
}

export type Ai_embedding_search_diagnosticCountAggregateInputType = {
  id?: true
  created_at?: true
  updated_at?: true
  embedded_content_results?: true
  similarity_type?: true
  min_similarity?: true
  search_text?: true
  search_time_ms?: true
  limit?: true
  search_embedding_id?: true
  _all?: true
}

export type Ai_embedding_search_diagnosticAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ai_embedding_search_diagnostic to aggregate.
   */
  where?: Prisma.ai_embedding_search_diagnosticWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ai_embedding_search_diagnostics to fetch.
   */
  orderBy?: Prisma.ai_embedding_search_diagnosticOrderByWithRelationInput | Prisma.ai_embedding_search_diagnosticOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ai_embedding_search_diagnosticWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ai_embedding_search_diagnostics from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ai_embedding_search_diagnostics.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ai_embedding_search_diagnostics
  **/
  _count?: true | Ai_embedding_search_diagnosticCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Ai_embedding_search_diagnosticAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Ai_embedding_search_diagnosticSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Ai_embedding_search_diagnosticMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Ai_embedding_search_diagnosticMaxAggregateInputType
}

export type GetAi_embedding_search_diagnosticAggregateType<T extends Ai_embedding_search_diagnosticAggregateArgs> = {
      [P in keyof T & keyof AggregateAi_embedding_search_diagnostic]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAi_embedding_search_diagnostic[P]>
    : Prisma.GetScalarType<T[P], AggregateAi_embedding_search_diagnostic[P]>
}




export type ai_embedding_search_diagnosticGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ai_embedding_search_diagnosticWhereInput
  orderBy?: Prisma.ai_embedding_search_diagnosticOrderByWithAggregationInput | Prisma.ai_embedding_search_diagnosticOrderByWithAggregationInput[]
  by: Prisma.Ai_embedding_search_diagnosticScalarFieldEnum[] | Prisma.Ai_embedding_search_diagnosticScalarFieldEnum
  having?: Prisma.ai_embedding_search_diagnosticScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Ai_embedding_search_diagnosticCountAggregateInputType | true
  _avg?: Ai_embedding_search_diagnosticAvgAggregateInputType
  _sum?: Ai_embedding_search_diagnosticSumAggregateInputType
  _min?: Ai_embedding_search_diagnosticMinAggregateInputType
  _max?: Ai_embedding_search_diagnosticMaxAggregateInputType
}

export type Ai_embedding_search_diagnosticGroupByOutputType = {
  id: string
  created_at: Date
  updated_at: Date
  embedded_content_results: string[]
  similarity_type: $Enums.vector_similarity_type
  min_similarity: number
  search_text: string | null
  search_time_ms: number
  limit: number
  search_embedding_id: string
  _count: Ai_embedding_search_diagnosticCountAggregateOutputType | null
  _avg: Ai_embedding_search_diagnosticAvgAggregateOutputType | null
  _sum: Ai_embedding_search_diagnosticSumAggregateOutputType | null
  _min: Ai_embedding_search_diagnosticMinAggregateOutputType | null
  _max: Ai_embedding_search_diagnosticMaxAggregateOutputType | null
}

type GetAi_embedding_search_diagnosticGroupByPayload<T extends ai_embedding_search_diagnosticGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Ai_embedding_search_diagnosticGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Ai_embedding_search_diagnosticGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Ai_embedding_search_diagnosticGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Ai_embedding_search_diagnosticGroupByOutputType[P]>
      }
    >
  >



export type ai_embedding_search_diagnosticWhereInput = {
  AND?: Prisma.ai_embedding_search_diagnosticWhereInput | Prisma.ai_embedding_search_diagnosticWhereInput[]
  OR?: Prisma.ai_embedding_search_diagnosticWhereInput[]
  NOT?: Prisma.ai_embedding_search_diagnosticWhereInput | Prisma.ai_embedding_search_diagnosticWhereInput[]
  id?: Prisma.StringFilter<"ai_embedding_search_diagnostic"> | string
  created_at?: Prisma.DateTimeFilter<"ai_embedding_search_diagnostic"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"ai_embedding_search_diagnostic"> | Date | string
  embedded_content_results?: Prisma.StringNullableListFilter<"ai_embedding_search_diagnostic">
  similarity_type?: Prisma.Enumvector_similarity_typeFilter<"ai_embedding_search_diagnostic"> | $Enums.vector_similarity_type
  min_similarity?: Prisma.FloatFilter<"ai_embedding_search_diagnostic"> | number
  search_text?: Prisma.StringNullableFilter<"ai_embedding_search_diagnostic"> | string | null
  search_time_ms?: Prisma.IntFilter<"ai_embedding_search_diagnostic"> | number
  limit?: Prisma.IntFilter<"ai_embedding_search_diagnostic"> | number
  search_embedding_id?: Prisma.StringFilter<"ai_embedding_search_diagnostic"> | string
  search_embedding?: Prisma.XOR<Prisma.Ai_cached_embeddingScalarRelationFilter, Prisma.ai_cached_embeddingWhereInput>
}

export type ai_embedding_search_diagnosticOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  embedded_content_results?: Prisma.SortOrder
  similarity_type?: Prisma.SortOrder
  min_similarity?: Prisma.SortOrder
  search_text?: Prisma.SortOrderInput | Prisma.SortOrder
  search_time_ms?: Prisma.SortOrder
  limit?: Prisma.SortOrder
  search_embedding_id?: Prisma.SortOrder
  search_embedding?: Prisma.ai_cached_embeddingOrderByWithRelationInput
}

export type ai_embedding_search_diagnosticWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ai_embedding_search_diagnosticWhereInput | Prisma.ai_embedding_search_diagnosticWhereInput[]
  OR?: Prisma.ai_embedding_search_diagnosticWhereInput[]
  NOT?: Prisma.ai_embedding_search_diagnosticWhereInput | Prisma.ai_embedding_search_diagnosticWhereInput[]
  created_at?: Prisma.DateTimeFilter<"ai_embedding_search_diagnostic"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"ai_embedding_search_diagnostic"> | Date | string
  embedded_content_results?: Prisma.StringNullableListFilter<"ai_embedding_search_diagnostic">
  similarity_type?: Prisma.Enumvector_similarity_typeFilter<"ai_embedding_search_diagnostic"> | $Enums.vector_similarity_type
  min_similarity?: Prisma.FloatFilter<"ai_embedding_search_diagnostic"> | number
  search_text?: Prisma.StringNullableFilter<"ai_embedding_search_diagnostic"> | string | null
  search_time_ms?: Prisma.IntFilter<"ai_embedding_search_diagnostic"> | number
  limit?: Prisma.IntFilter<"ai_embedding_search_diagnostic"> | number
  search_embedding_id?: Prisma.StringFilter<"ai_embedding_search_diagnostic"> | string
  search_embedding?: Prisma.XOR<Prisma.Ai_cached_embeddingScalarRelationFilter, Prisma.ai_cached_embeddingWhereInput>
}, "id">

export type ai_embedding_search_diagnosticOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  embedded_content_results?: Prisma.SortOrder
  similarity_type?: Prisma.SortOrder
  min_similarity?: Prisma.SortOrder
  search_text?: Prisma.SortOrderInput | Prisma.SortOrder
  search_time_ms?: Prisma.SortOrder
  limit?: Prisma.SortOrder
  search_embedding_id?: Prisma.SortOrder
  _count?: Prisma.ai_embedding_search_diagnosticCountOrderByAggregateInput
  _avg?: Prisma.ai_embedding_search_diagnosticAvgOrderByAggregateInput
  _max?: Prisma.ai_embedding_search_diagnosticMaxOrderByAggregateInput
  _min?: Prisma.ai_embedding_search_diagnosticMinOrderByAggregateInput
  _sum?: Prisma.ai_embedding_search_diagnosticSumOrderByAggregateInput
}

export type ai_embedding_search_diagnosticScalarWhereWithAggregatesInput = {
  AND?: Prisma.ai_embedding_search_diagnosticScalarWhereWithAggregatesInput | Prisma.ai_embedding_search_diagnosticScalarWhereWithAggregatesInput[]
  OR?: Prisma.ai_embedding_search_diagnosticScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ai_embedding_search_diagnosticScalarWhereWithAggregatesInput | Prisma.ai_embedding_search_diagnosticScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ai_embedding_search_diagnostic"> | string
  created_at?: Prisma.DateTimeWithAggregatesFilter<"ai_embedding_search_diagnostic"> | Date | string
  updated_at?: Prisma.DateTimeWithAggregatesFilter<"ai_embedding_search_diagnostic"> | Date | string
  embedded_content_results?: Prisma.StringNullableListFilter<"ai_embedding_search_diagnostic">
  similarity_type?: Prisma.Enumvector_similarity_typeWithAggregatesFilter<"ai_embedding_search_diagnostic"> | $Enums.vector_similarity_type
  min_similarity?: Prisma.FloatWithAggregatesFilter<"ai_embedding_search_diagnostic"> | number
  search_text?: Prisma.StringNullableWithAggregatesFilter<"ai_embedding_search_diagnostic"> | string | null
  search_time_ms?: Prisma.IntWithAggregatesFilter<"ai_embedding_search_diagnostic"> | number
  limit?: Prisma.IntWithAggregatesFilter<"ai_embedding_search_diagnostic"> | number
  search_embedding_id?: Prisma.StringWithAggregatesFilter<"ai_embedding_search_diagnostic"> | string
}

export type ai_embedding_search_diagnosticCreateInput = {
  id?: string
  created_at?: Date | string
  updated_at?: Date | string
  embedded_content_results?: Prisma.ai_embedding_search_diagnosticCreateembedded_content_resultsInput | string[]
  similarity_type: $Enums.vector_similarity_type
  min_similarity: number
  search_text?: string | null
  search_time_ms: number
  limit: number
  search_embedding: Prisma.ai_cached_embeddingCreateNestedOneWithoutAi_embedding_search_diagnosticsInput
}

export type ai_embedding_search_diagnosticUncheckedCreateInput = {
  id?: string
  created_at?: Date | string
  updated_at?: Date | string
  embedded_content_results?: Prisma.ai_embedding_search_diagnosticCreateembedded_content_resultsInput | string[]
  similarity_type: $Enums.vector_similarity_type
  min_similarity: number
  search_text?: string | null
  search_time_ms: number
  limit: number
  search_embedding_id: string
}

export type ai_embedding_search_diagnosticUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  embedded_content_results?: Prisma.ai_embedding_search_diagnosticUpdateembedded_content_resultsInput | string[]
  similarity_type?: Prisma.Enumvector_similarity_typeFieldUpdateOperationsInput | $Enums.vector_similarity_type
  min_similarity?: Prisma.FloatFieldUpdateOperationsInput | number
  search_text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  search_time_ms?: Prisma.IntFieldUpdateOperationsInput | number
  limit?: Prisma.IntFieldUpdateOperationsInput | number
  search_embedding?: Prisma.ai_cached_embeddingUpdateOneRequiredWithoutAi_embedding_search_diagnosticsNestedInput
}

export type ai_embedding_search_diagnosticUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  embedded_content_results?: Prisma.ai_embedding_search_diagnosticUpdateembedded_content_resultsInput | string[]
  similarity_type?: Prisma.Enumvector_similarity_typeFieldUpdateOperationsInput | $Enums.vector_similarity_type
  min_similarity?: Prisma.FloatFieldUpdateOperationsInput | number
  search_text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  search_time_ms?: Prisma.IntFieldUpdateOperationsInput | number
  limit?: Prisma.IntFieldUpdateOperationsInput | number
  search_embedding_id?: Prisma.StringFieldUpdateOperationsInput | string
}

export type ai_embedding_search_diagnosticCreateManyInput = {
  id?: string
  created_at?: Date | string
  updated_at?: Date | string
  embedded_content_results?: Prisma.ai_embedding_search_diagnosticCreateembedded_content_resultsInput | string[]
  similarity_type: $Enums.vector_similarity_type
  min_similarity: number
  search_text?: string | null
  search_time_ms: number
  limit: number
  search_embedding_id: string
}

export type ai_embedding_search_diagnosticUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  embedded_content_results?: Prisma.ai_embedding_search_diagnosticUpdateembedded_content_resultsInput | string[]
  similarity_type?: Prisma.Enumvector_similarity_typeFieldUpdateOperationsInput | $Enums.vector_similarity_type
  min_similarity?: Prisma.FloatFieldUpdateOperationsInput | number
  search_text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  search_time_ms?: Prisma.IntFieldUpdateOperationsInput | number
  limit?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ai_embedding_search_diagnosticUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  embedded_content_results?: Prisma.ai_embedding_search_diagnosticUpdateembedded_content_resultsInput | string[]
  similarity_type?: Prisma.Enumvector_similarity_typeFieldUpdateOperationsInput | $Enums.vector_similarity_type
  min_similarity?: Prisma.FloatFieldUpdateOperationsInput | number
  search_text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  search_time_ms?: Prisma.IntFieldUpdateOperationsInput | number
  limit?: Prisma.IntFieldUpdateOperationsInput | number
  search_embedding_id?: Prisma.StringFieldUpdateOperationsInput | string
}

export type Ai_embedding_search_diagnosticListRelationFilter = {
  every?: Prisma.ai_embedding_search_diagnosticWhereInput
  some?: Prisma.ai_embedding_search_diagnosticWhereInput
  none?: Prisma.ai_embedding_search_diagnosticWhereInput
}

export type ai_embedding_search_diagnosticOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type StringNullableListFilter<$PrismaModel = never> = {
  equals?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel> | null
  has?: string | Prisma.StringFieldRefInput<$PrismaModel> | null
  hasEvery?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel>
  hasSome?: string[] | Prisma.ListStringFieldRefInput<$PrismaModel>
  isEmpty?: boolean
}

export type ai_embedding_search_diagnosticCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  embedded_content_results?: Prisma.SortOrder
  similarity_type?: Prisma.SortOrder
  min_similarity?: Prisma.SortOrder
  search_text?: Prisma.SortOrder
  search_time_ms?: Prisma.SortOrder
  limit?: Prisma.SortOrder
  search_embedding_id?: Prisma.SortOrder
}

export type ai_embedding_search_diagnosticAvgOrderByAggregateInput = {
  min_similarity?: Prisma.SortOrder
  search_time_ms?: Prisma.SortOrder
  limit?: Prisma.SortOrder
}

export type ai_embedding_search_diagnosticMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  similarity_type?: Prisma.SortOrder
  min_similarity?: Prisma.SortOrder
  search_text?: Prisma.SortOrder
  search_time_ms?: Prisma.SortOrder
  limit?: Prisma.SortOrder
  search_embedding_id?: Prisma.SortOrder
}

export type ai_embedding_search_diagnosticMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  created_at?: Prisma.SortOrder
  updated_at?: Prisma.SortOrder
  similarity_type?: Prisma.SortOrder
  min_similarity?: Prisma.SortOrder
  search_text?: Prisma.SortOrder
  search_time_ms?: Prisma.SortOrder
  limit?: Prisma.SortOrder
  search_embedding_id?: Prisma.SortOrder
}

export type ai_embedding_search_diagnosticSumOrderByAggregateInput = {
  min_similarity?: Prisma.SortOrder
  search_time_ms?: Prisma.SortOrder
  limit?: Prisma.SortOrder
}

export type ai_embedding_search_diagnosticUpdateManyWithoutSearch_embeddingNestedInput = {
  create?: Prisma.XOR<Prisma.ai_embedding_search_diagnosticCreateWithoutSearch_embeddingInput, Prisma.ai_embedding_search_diagnosticUncheckedCreateWithoutSearch_embeddingInput> | Prisma.ai_embedding_search_diagnosticCreateWithoutSearch_embeddingInput[] | Prisma.ai_embedding_search_diagnosticUncheckedCreateWithoutSearch_embeddingInput[]
  connectOrCreate?: Prisma.ai_embedding_search_diagnosticCreateOrConnectWithoutSearch_embeddingInput | Prisma.ai_embedding_search_diagnosticCreateOrConnectWithoutSearch_embeddingInput[]
  upsert?: Prisma.ai_embedding_search_diagnosticUpsertWithWhereUniqueWithoutSearch_embeddingInput | Prisma.ai_embedding_search_diagnosticUpsertWithWhereUniqueWithoutSearch_embeddingInput[]
  createMany?: Prisma.ai_embedding_search_diagnosticCreateManySearch_embeddingInputEnvelope
  set?: Prisma.ai_embedding_search_diagnosticWhereUniqueInput | Prisma.ai_embedding_search_diagnosticWhereUniqueInput[]
  disconnect?: Prisma.ai_embedding_search_diagnosticWhereUniqueInput | Prisma.ai_embedding_search_diagnosticWhereUniqueInput[]
  delete?: Prisma.ai_embedding_search_diagnosticWhereUniqueInput | Prisma.ai_embedding_search_diagnosticWhereUniqueInput[]
  connect?: Prisma.ai_embedding_search_diagnosticWhereUniqueInput | Prisma.ai_embedding_search_diagnosticWhereUniqueInput[]
  update?: Prisma.ai_embedding_search_diagnosticUpdateWithWhereUniqueWithoutSearch_embeddingInput | Prisma.ai_embedding_search_diagnosticUpdateWithWhereUniqueWithoutSearch_embeddingInput[]
  updateMany?: Prisma.ai_embedding_search_diagnosticUpdateManyWithWhereWithoutSearch_embeddingInput | Prisma.ai_embedding_search_diagnosticUpdateManyWithWhereWithoutSearch_embeddingInput[]
  deleteMany?: Prisma.ai_embedding_search_diagnosticScalarWhereInput | Prisma.ai_embedding_search_diagnosticScalarWhereInput[]
}

export type ai_embedding_search_diagnosticUncheckedUpdateManyWithoutSearch_embeddingNestedInput = {
  create?: Prisma.XOR<Prisma.ai_embedding_search_diagnosticCreateWithoutSearch_embeddingInput, Prisma.ai_embedding_search_diagnosticUncheckedCreateWithoutSearch_embeddingInput> | Prisma.ai_embedding_search_diagnosticCreateWithoutSearch_embeddingInput[] | Prisma.ai_embedding_search_diagnosticUncheckedCreateWithoutSearch_embeddingInput[]
  connectOrCreate?: Prisma.ai_embedding_search_diagnosticCreateOrConnectWithoutSearch_embeddingInput | Prisma.ai_embedding_search_diagnosticCreateOrConnectWithoutSearch_embeddingInput[]
  upsert?: Prisma.ai_embedding_search_diagnosticUpsertWithWhereUniqueWithoutSearch_embeddingInput | Prisma.ai_embedding_search_diagnosticUpsertWithWhereUniqueWithoutSearch_embeddingInput[]
  createMany?: Prisma.ai_embedding_search_diagnosticCreateManySearch_embeddingInputEnvelope
  set?: Prisma.ai_embedding_search_diagnosticWhereUniqueInput | Prisma.ai_embedding_search_diagnosticWhereUniqueInput[]
  disconnect?: Prisma.ai_embedding_search_diagnosticWhereUniqueInput | Prisma.ai_embedding_search_diagnosticWhereUniqueInput[]
  delete?: Prisma.ai_embedding_search_diagnosticWhereUniqueInput | Prisma.ai_embedding_search_diagnosticWhereUniqueInput[]
  connect?: Prisma.ai_embedding_search_diagnosticWhereUniqueInput | Prisma.ai_embedding_search_diagnosticWhereUniqueInput[]
  update?: Prisma.ai_embedding_search_diagnosticUpdateWithWhereUniqueWithoutSearch_embeddingInput | Prisma.ai_embedding_search_diagnosticUpdateWithWhereUniqueWithoutSearch_embeddingInput[]
  updateMany?: Prisma.ai_embedding_search_diagnosticUpdateManyWithWhereWithoutSearch_embeddingInput | Prisma.ai_embedding_search_diagnosticUpdateManyWithWhereWithoutSearch_embeddingInput[]
  deleteMany?: Prisma.ai_embedding_search_diagnosticScalarWhereInput | Prisma.ai_embedding_search_diagnosticScalarWhereInput[]
}

export type ai_embedding_search_diagnosticCreateembedded_content_resultsInput = {
  set: string[]
}

export type ai_embedding_search_diagnosticUpdateembedded_content_resultsInput = {
  set?: string[]
  push?: string | string[]
}

export type Enumvector_similarity_typeFieldUpdateOperationsInput = {
  set?: $Enums.vector_similarity_type
}

export type FloatFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type ai_embedding_search_diagnosticCreateWithoutSearch_embeddingInput = {
  id?: string
  created_at?: Date | string
  updated_at?: Date | string
  embedded_content_results?: Prisma.ai_embedding_search_diagnosticCreateembedded_content_resultsInput | string[]
  similarity_type: $Enums.vector_similarity_type
  min_similarity: number
  search_text?: string | null
  search_time_ms: number
  limit: number
}

export type ai_embedding_search_diagnosticUncheckedCreateWithoutSearch_embeddingInput = {
  id?: string
  created_at?: Date | string
  updated_at?: Date | string
  embedded_content_results?: Prisma.ai_embedding_search_diagnosticCreateembedded_content_resultsInput | string[]
  similarity_type: $Enums.vector_similarity_type
  min_similarity: number
  search_text?: string | null
  search_time_ms: number
  limit: number
}

export type ai_embedding_search_diagnosticCreateOrConnectWithoutSearch_embeddingInput = {
  where: Prisma.ai_embedding_search_diagnosticWhereUniqueInput
  create: Prisma.XOR<Prisma.ai_embedding_search_diagnosticCreateWithoutSearch_embeddingInput, Prisma.ai_embedding_search_diagnosticUncheckedCreateWithoutSearch_embeddingInput>
}

export type ai_embedding_search_diagnosticUpsertWithWhereUniqueWithoutSearch_embeddingInput = {
  where: Prisma.ai_embedding_search_diagnosticWhereUniqueInput
  update: Prisma.XOR<Prisma.ai_embedding_search_diagnosticUpdateWithoutSearch_embeddingInput, Prisma.ai_embedding_search_diagnosticUncheckedUpdateWithoutSearch_embeddingInput>
  create: Prisma.XOR<Prisma.ai_embedding_search_diagnosticCreateWithoutSearch_embeddingInput, Prisma.ai_embedding_search_diagnosticUncheckedCreateWithoutSearch_embeddingInput>
}

export type ai_embedding_search_diagnosticCreateManySearch_embeddingInputEnvelope = {
  data: Prisma.ai_embedding_search_diagnosticCreateManySearch_embeddingInput | Prisma.ai_embedding_search_diagnosticCreateManySearch_embeddingInput[]
  skipDuplicates?: boolean
}

export type ai_embedding_search_diagnosticUpdateWithWhereUniqueWithoutSearch_embeddingInput = {
  where: Prisma.ai_embedding_search_diagnosticWhereUniqueInput
  data: Prisma.XOR<Prisma.ai_embedding_search_diagnosticUpdateWithoutSearch_embeddingInput, Prisma.ai_embedding_search_diagnosticUncheckedUpdateWithoutSearch_embeddingInput>
}

export type ai_embedding_search_diagnosticUpdateManyWithWhereWithoutSearch_embeddingInput = {
  where: Prisma.ai_embedding_search_diagnosticScalarWhereInput
  data: Prisma.XOR<Prisma.ai_embedding_search_diagnosticUpdateManyMutationInput, Prisma.ai_embedding_search_diagnosticUncheckedUpdateManyWithoutSearch_embeddingInput>
}

export type ai_embedding_search_diagnosticScalarWhereInput = {
  AND?: Prisma.ai_embedding_search_diagnosticScalarWhereInput | Prisma.ai_embedding_search_diagnosticScalarWhereInput[]
  OR?: Prisma.ai_embedding_search_diagnosticScalarWhereInput[]
  NOT?: Prisma.ai_embedding_search_diagnosticScalarWhereInput | Prisma.ai_embedding_search_diagnosticScalarWhereInput[]
  id?: Prisma.StringFilter<"ai_embedding_search_diagnostic"> | string
  created_at?: Prisma.DateTimeFilter<"ai_embedding_search_diagnostic"> | Date | string
  updated_at?: Prisma.DateTimeFilter<"ai_embedding_search_diagnostic"> | Date | string
  embedded_content_results?: Prisma.StringNullableListFilter<"ai_embedding_search_diagnostic">
  similarity_type?: Prisma.Enumvector_similarity_typeFilter<"ai_embedding_search_diagnostic"> | $Enums.vector_similarity_type
  min_similarity?: Prisma.FloatFilter<"ai_embedding_search_diagnostic"> | number
  search_text?: Prisma.StringNullableFilter<"ai_embedding_search_diagnostic"> | string | null
  search_time_ms?: Prisma.IntFilter<"ai_embedding_search_diagnostic"> | number
  limit?: Prisma.IntFilter<"ai_embedding_search_diagnostic"> | number
  search_embedding_id?: Prisma.StringFilter<"ai_embedding_search_diagnostic"> | string
}

export type ai_embedding_search_diagnosticUpdateWithoutSearch_embeddingInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  embedded_content_results?: Prisma.ai_embedding_search_diagnosticUpdateembedded_content_resultsInput | string[]
  similarity_type?: Prisma.Enumvector_similarity_typeFieldUpdateOperationsInput | $Enums.vector_similarity_type
  min_similarity?: Prisma.FloatFieldUpdateOperationsInput | number
  search_text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  search_time_ms?: Prisma.IntFieldUpdateOperationsInput | number
  limit?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ai_embedding_search_diagnosticUncheckedUpdateWithoutSearch_embeddingInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  embedded_content_results?: Prisma.ai_embedding_search_diagnosticUpdateembedded_content_resultsInput | string[]
  similarity_type?: Prisma.Enumvector_similarity_typeFieldUpdateOperationsInput | $Enums.vector_similarity_type
  min_similarity?: Prisma.FloatFieldUpdateOperationsInput | number
  search_text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  search_time_ms?: Prisma.IntFieldUpdateOperationsInput | number
  limit?: Prisma.IntFieldUpdateOperationsInput | number
}

export type ai_embedding_search_diagnosticCreateManySearch_embeddingInput = {
  id?: string
  created_at?: Date | string
  updated_at?: Date | string
  embedded_content_results?: Prisma.ai_embedding_search_diagnosticCreateembedded_content_resultsInput | string[]
  similarity_type: $Enums.vector_similarity_type
  min_similarity: number
  search_text?: string | null
  search_time_ms: number
  limit: number
}

export type ai_embedding_search_diagnosticUncheckedUpdateManyWithoutSearch_embeddingInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  created_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updated_at?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  embedded_content_results?: Prisma.ai_embedding_search_diagnosticUpdateembedded_content_resultsInput | string[]
  similarity_type?: Prisma.Enumvector_similarity_typeFieldUpdateOperationsInput | $Enums.vector_similarity_type
  min_similarity?: Prisma.FloatFieldUpdateOperationsInput | number
  search_text?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  search_time_ms?: Prisma.IntFieldUpdateOperationsInput | number
  limit?: Prisma.IntFieldUpdateOperationsInput | number
}



export type ai_embedding_search_diagnosticSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  created_at?: boolean
  updated_at?: boolean
  embedded_content_results?: boolean
  similarity_type?: boolean
  min_similarity?: boolean
  search_text?: boolean
  search_time_ms?: boolean
  limit?: boolean
  search_embedding_id?: boolean
  search_embedding?: boolean | Prisma.ai_cached_embeddingDefaultArgs<ExtArgs>
}, ExtArgs["result"]["ai_embedding_search_diagnostic"]>

export type ai_embedding_search_diagnosticSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  created_at?: boolean
  updated_at?: boolean
  embedded_content_results?: boolean
  similarity_type?: boolean
  min_similarity?: boolean
  search_text?: boolean
  search_time_ms?: boolean
  limit?: boolean
  search_embedding_id?: boolean
  search_embedding?: boolean | Prisma.ai_cached_embeddingDefaultArgs<ExtArgs>
}, ExtArgs["result"]["ai_embedding_search_diagnostic"]>

export type ai_embedding_search_diagnosticSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  created_at?: boolean
  updated_at?: boolean
  embedded_content_results?: boolean
  similarity_type?: boolean
  min_similarity?: boolean
  search_text?: boolean
  search_time_ms?: boolean
  limit?: boolean
  search_embedding_id?: boolean
  search_embedding?: boolean | Prisma.ai_cached_embeddingDefaultArgs<ExtArgs>
}, ExtArgs["result"]["ai_embedding_search_diagnostic"]>

export type ai_embedding_search_diagnosticSelectScalar = {
  id?: boolean
  created_at?: boolean
  updated_at?: boolean
  embedded_content_results?: boolean
  similarity_type?: boolean
  min_similarity?: boolean
  search_text?: boolean
  search_time_ms?: boolean
  limit?: boolean
  search_embedding_id?: boolean
}

export type ai_embedding_search_diagnosticOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "created_at" | "updated_at" | "embedded_content_results" | "similarity_type" | "min_similarity" | "search_text" | "search_time_ms" | "limit" | "search_embedding_id", ExtArgs["result"]["ai_embedding_search_diagnostic"]>
export type ai_embedding_search_diagnosticInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  search_embedding?: boolean | Prisma.ai_cached_embeddingDefaultArgs<ExtArgs>
}
export type ai_embedding_search_diagnosticIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  search_embedding?: boolean | Prisma.ai_cached_embeddingDefaultArgs<ExtArgs>
}
export type ai_embedding_search_diagnosticIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  search_embedding?: boolean | Prisma.ai_cached_embeddingDefaultArgs<ExtArgs>
}

export type $ai_embedding_search_diagnosticPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ai_embedding_search_diagnostic"
  objects: {
    search_embedding: Prisma.$ai_cached_embeddingPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    created_at: Date
    updated_at: Date
    embedded_content_results: string[]
    similarity_type: $Enums.vector_similarity_type
    min_similarity: number
    search_text: string | null
    search_time_ms: number
    limit: number
    search_embedding_id: string
  }, ExtArgs["result"]["ai_embedding_search_diagnostic"]>
  composites: {}
}

export type ai_embedding_search_diagnosticGetPayload<S extends boolean | null | undefined | ai_embedding_search_diagnosticDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ai_embedding_search_diagnosticPayload, S>

export type ai_embedding_search_diagnosticCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ai_embedding_search_diagnosticFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Ai_embedding_search_diagnosticCountAggregateInputType | true
  }

export interface ai_embedding_search_diagnosticDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ai_embedding_search_diagnostic'], meta: { name: 'ai_embedding_search_diagnostic' } }
  /**
   * Find zero or one Ai_embedding_search_diagnostic that matches the filter.
   * @param {ai_embedding_search_diagnosticFindUniqueArgs} args - Arguments to find a Ai_embedding_search_diagnostic
   * @example
   * // Get one Ai_embedding_search_diagnostic
   * const ai_embedding_search_diagnostic = await prisma.ai_embedding_search_diagnostic.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ai_embedding_search_diagnosticFindUniqueArgs>(args: Prisma.SelectSubset<T, ai_embedding_search_diagnosticFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ai_embedding_search_diagnosticClient<runtime.Types.Result.GetResult<Prisma.$ai_embedding_search_diagnosticPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Ai_embedding_search_diagnostic that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ai_embedding_search_diagnosticFindUniqueOrThrowArgs} args - Arguments to find a Ai_embedding_search_diagnostic
   * @example
   * // Get one Ai_embedding_search_diagnostic
   * const ai_embedding_search_diagnostic = await prisma.ai_embedding_search_diagnostic.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ai_embedding_search_diagnosticFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ai_embedding_search_diagnosticFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ai_embedding_search_diagnosticClient<runtime.Types.Result.GetResult<Prisma.$ai_embedding_search_diagnosticPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Ai_embedding_search_diagnostic that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ai_embedding_search_diagnosticFindFirstArgs} args - Arguments to find a Ai_embedding_search_diagnostic
   * @example
   * // Get one Ai_embedding_search_diagnostic
   * const ai_embedding_search_diagnostic = await prisma.ai_embedding_search_diagnostic.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ai_embedding_search_diagnosticFindFirstArgs>(args?: Prisma.SelectSubset<T, ai_embedding_search_diagnosticFindFirstArgs<ExtArgs>>): Prisma.Prisma__ai_embedding_search_diagnosticClient<runtime.Types.Result.GetResult<Prisma.$ai_embedding_search_diagnosticPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Ai_embedding_search_diagnostic that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ai_embedding_search_diagnosticFindFirstOrThrowArgs} args - Arguments to find a Ai_embedding_search_diagnostic
   * @example
   * // Get one Ai_embedding_search_diagnostic
   * const ai_embedding_search_diagnostic = await prisma.ai_embedding_search_diagnostic.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ai_embedding_search_diagnosticFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ai_embedding_search_diagnosticFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ai_embedding_search_diagnosticClient<runtime.Types.Result.GetResult<Prisma.$ai_embedding_search_diagnosticPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Ai_embedding_search_diagnostics that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ai_embedding_search_diagnosticFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Ai_embedding_search_diagnostics
   * const ai_embedding_search_diagnostics = await prisma.ai_embedding_search_diagnostic.findMany()
   * 
   * // Get first 10 Ai_embedding_search_diagnostics
   * const ai_embedding_search_diagnostics = await prisma.ai_embedding_search_diagnostic.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const ai_embedding_search_diagnosticWithIdOnly = await prisma.ai_embedding_search_diagnostic.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ai_embedding_search_diagnosticFindManyArgs>(args?: Prisma.SelectSubset<T, ai_embedding_search_diagnosticFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ai_embedding_search_diagnosticPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Ai_embedding_search_diagnostic.
   * @param {ai_embedding_search_diagnosticCreateArgs} args - Arguments to create a Ai_embedding_search_diagnostic.
   * @example
   * // Create one Ai_embedding_search_diagnostic
   * const Ai_embedding_search_diagnostic = await prisma.ai_embedding_search_diagnostic.create({
   *   data: {
   *     // ... data to create a Ai_embedding_search_diagnostic
   *   }
   * })
   * 
   */
  create<T extends ai_embedding_search_diagnosticCreateArgs>(args: Prisma.SelectSubset<T, ai_embedding_search_diagnosticCreateArgs<ExtArgs>>): Prisma.Prisma__ai_embedding_search_diagnosticClient<runtime.Types.Result.GetResult<Prisma.$ai_embedding_search_diagnosticPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Ai_embedding_search_diagnostics.
   * @param {ai_embedding_search_diagnosticCreateManyArgs} args - Arguments to create many Ai_embedding_search_diagnostics.
   * @example
   * // Create many Ai_embedding_search_diagnostics
   * const ai_embedding_search_diagnostic = await prisma.ai_embedding_search_diagnostic.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ai_embedding_search_diagnosticCreateManyArgs>(args?: Prisma.SelectSubset<T, ai_embedding_search_diagnosticCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Ai_embedding_search_diagnostics and returns the data saved in the database.
   * @param {ai_embedding_search_diagnosticCreateManyAndReturnArgs} args - Arguments to create many Ai_embedding_search_diagnostics.
   * @example
   * // Create many Ai_embedding_search_diagnostics
   * const ai_embedding_search_diagnostic = await prisma.ai_embedding_search_diagnostic.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Ai_embedding_search_diagnostics and only return the `id`
   * const ai_embedding_search_diagnosticWithIdOnly = await prisma.ai_embedding_search_diagnostic.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ai_embedding_search_diagnosticCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ai_embedding_search_diagnosticCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ai_embedding_search_diagnosticPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Ai_embedding_search_diagnostic.
   * @param {ai_embedding_search_diagnosticDeleteArgs} args - Arguments to delete one Ai_embedding_search_diagnostic.
   * @example
   * // Delete one Ai_embedding_search_diagnostic
   * const Ai_embedding_search_diagnostic = await prisma.ai_embedding_search_diagnostic.delete({
   *   where: {
   *     // ... filter to delete one Ai_embedding_search_diagnostic
   *   }
   * })
   * 
   */
  delete<T extends ai_embedding_search_diagnosticDeleteArgs>(args: Prisma.SelectSubset<T, ai_embedding_search_diagnosticDeleteArgs<ExtArgs>>): Prisma.Prisma__ai_embedding_search_diagnosticClient<runtime.Types.Result.GetResult<Prisma.$ai_embedding_search_diagnosticPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Ai_embedding_search_diagnostic.
   * @param {ai_embedding_search_diagnosticUpdateArgs} args - Arguments to update one Ai_embedding_search_diagnostic.
   * @example
   * // Update one Ai_embedding_search_diagnostic
   * const ai_embedding_search_diagnostic = await prisma.ai_embedding_search_diagnostic.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ai_embedding_search_diagnosticUpdateArgs>(args: Prisma.SelectSubset<T, ai_embedding_search_diagnosticUpdateArgs<ExtArgs>>): Prisma.Prisma__ai_embedding_search_diagnosticClient<runtime.Types.Result.GetResult<Prisma.$ai_embedding_search_diagnosticPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Ai_embedding_search_diagnostics.
   * @param {ai_embedding_search_diagnosticDeleteManyArgs} args - Arguments to filter Ai_embedding_search_diagnostics to delete.
   * @example
   * // Delete a few Ai_embedding_search_diagnostics
   * const { count } = await prisma.ai_embedding_search_diagnostic.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ai_embedding_search_diagnosticDeleteManyArgs>(args?: Prisma.SelectSubset<T, ai_embedding_search_diagnosticDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Ai_embedding_search_diagnostics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ai_embedding_search_diagnosticUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Ai_embedding_search_diagnostics
   * const ai_embedding_search_diagnostic = await prisma.ai_embedding_search_diagnostic.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ai_embedding_search_diagnosticUpdateManyArgs>(args: Prisma.SelectSubset<T, ai_embedding_search_diagnosticUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Ai_embedding_search_diagnostics and returns the data updated in the database.
   * @param {ai_embedding_search_diagnosticUpdateManyAndReturnArgs} args - Arguments to update many Ai_embedding_search_diagnostics.
   * @example
   * // Update many Ai_embedding_search_diagnostics
   * const ai_embedding_search_diagnostic = await prisma.ai_embedding_search_diagnostic.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Ai_embedding_search_diagnostics and only return the `id`
   * const ai_embedding_search_diagnosticWithIdOnly = await prisma.ai_embedding_search_diagnostic.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ai_embedding_search_diagnosticUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ai_embedding_search_diagnosticUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ai_embedding_search_diagnosticPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Ai_embedding_search_diagnostic.
   * @param {ai_embedding_search_diagnosticUpsertArgs} args - Arguments to update or create a Ai_embedding_search_diagnostic.
   * @example
   * // Update or create a Ai_embedding_search_diagnostic
   * const ai_embedding_search_diagnostic = await prisma.ai_embedding_search_diagnostic.upsert({
   *   create: {
   *     // ... data to create a Ai_embedding_search_diagnostic
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Ai_embedding_search_diagnostic we want to update
   *   }
   * })
   */
  upsert<T extends ai_embedding_search_diagnosticUpsertArgs>(args: Prisma.SelectSubset<T, ai_embedding_search_diagnosticUpsertArgs<ExtArgs>>): Prisma.Prisma__ai_embedding_search_diagnosticClient<runtime.Types.Result.GetResult<Prisma.$ai_embedding_search_diagnosticPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Ai_embedding_search_diagnostics.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ai_embedding_search_diagnosticCountArgs} args - Arguments to filter Ai_embedding_search_diagnostics to count.
   * @example
   * // Count the number of Ai_embedding_search_diagnostics
   * const count = await prisma.ai_embedding_search_diagnostic.count({
   *   where: {
   *     // ... the filter for the Ai_embedding_search_diagnostics we want to count
   *   }
   * })
  **/
  count<T extends ai_embedding_search_diagnosticCountArgs>(
    args?: Prisma.Subset<T, ai_embedding_search_diagnosticCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Ai_embedding_search_diagnosticCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Ai_embedding_search_diagnostic.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Ai_embedding_search_diagnosticAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Ai_embedding_search_diagnosticAggregateArgs>(args: Prisma.Subset<T, Ai_embedding_search_diagnosticAggregateArgs>): Prisma.PrismaPromise<GetAi_embedding_search_diagnosticAggregateType<T>>

  /**
   * Group by Ai_embedding_search_diagnostic.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ai_embedding_search_diagnosticGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ai_embedding_search_diagnosticGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ai_embedding_search_diagnosticGroupByArgs['orderBy'] }
      : { orderBy?: ai_embedding_search_diagnosticGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ai_embedding_search_diagnosticGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAi_embedding_search_diagnosticGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ai_embedding_search_diagnostic model
 */
readonly fields: ai_embedding_search_diagnosticFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ai_embedding_search_diagnostic.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ai_embedding_search_diagnosticClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  search_embedding<T extends Prisma.ai_cached_embeddingDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ai_cached_embeddingDefaultArgs<ExtArgs>>): Prisma.Prisma__ai_cached_embeddingClient<runtime.Types.Result.GetResult<Prisma.$ai_cached_embeddingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ai_embedding_search_diagnostic model
 */
export interface ai_embedding_search_diagnosticFieldRefs {
  readonly id: Prisma.FieldRef<"ai_embedding_search_diagnostic", 'String'>
  readonly created_at: Prisma.FieldRef<"ai_embedding_search_diagnostic", 'DateTime'>
  readonly updated_at: Prisma.FieldRef<"ai_embedding_search_diagnostic", 'DateTime'>
  readonly embedded_content_results: Prisma.FieldRef<"ai_embedding_search_diagnostic", 'String[]'>
  readonly similarity_type: Prisma.FieldRef<"ai_embedding_search_diagnostic", 'vector_similarity_type'>
  readonly min_similarity: Prisma.FieldRef<"ai_embedding_search_diagnostic", 'Float'>
  readonly search_text: Prisma.FieldRef<"ai_embedding_search_diagnostic", 'String'>
  readonly search_time_ms: Prisma.FieldRef<"ai_embedding_search_diagnostic", 'Int'>
  readonly limit: Prisma.FieldRef<"ai_embedding_search_diagnostic", 'Int'>
  readonly search_embedding_id: Prisma.FieldRef<"ai_embedding_search_diagnostic", 'String'>
}
    

// Custom InputTypes
/**
 * ai_embedding_search_diagnostic findUnique
 */
export type ai_embedding_search_diagnosticFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_embedding_search_diagnostic
   */
  select?: Prisma.ai_embedding_search_diagnosticSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_embedding_search_diagnostic
   */
  omit?: Prisma.ai_embedding_search_diagnosticOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_embedding_search_diagnosticInclude<ExtArgs> | null
  /**
   * Filter, which ai_embedding_search_diagnostic to fetch.
   */
  where: Prisma.ai_embedding_search_diagnosticWhereUniqueInput
}

/**
 * ai_embedding_search_diagnostic findUniqueOrThrow
 */
export type ai_embedding_search_diagnosticFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_embedding_search_diagnostic
   */
  select?: Prisma.ai_embedding_search_diagnosticSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_embedding_search_diagnostic
   */
  omit?: Prisma.ai_embedding_search_diagnosticOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_embedding_search_diagnosticInclude<ExtArgs> | null
  /**
   * Filter, which ai_embedding_search_diagnostic to fetch.
   */
  where: Prisma.ai_embedding_search_diagnosticWhereUniqueInput
}

/**
 * ai_embedding_search_diagnostic findFirst
 */
export type ai_embedding_search_diagnosticFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_embedding_search_diagnostic
   */
  select?: Prisma.ai_embedding_search_diagnosticSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_embedding_search_diagnostic
   */
  omit?: Prisma.ai_embedding_search_diagnosticOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_embedding_search_diagnosticInclude<ExtArgs> | null
  /**
   * Filter, which ai_embedding_search_diagnostic to fetch.
   */
  where?: Prisma.ai_embedding_search_diagnosticWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ai_embedding_search_diagnostics to fetch.
   */
  orderBy?: Prisma.ai_embedding_search_diagnosticOrderByWithRelationInput | Prisma.ai_embedding_search_diagnosticOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ai_embedding_search_diagnostics.
   */
  cursor?: Prisma.ai_embedding_search_diagnosticWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ai_embedding_search_diagnostics from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ai_embedding_search_diagnostics.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ai_embedding_search_diagnostics.
   */
  distinct?: Prisma.Ai_embedding_search_diagnosticScalarFieldEnum | Prisma.Ai_embedding_search_diagnosticScalarFieldEnum[]
}

/**
 * ai_embedding_search_diagnostic findFirstOrThrow
 */
export type ai_embedding_search_diagnosticFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_embedding_search_diagnostic
   */
  select?: Prisma.ai_embedding_search_diagnosticSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_embedding_search_diagnostic
   */
  omit?: Prisma.ai_embedding_search_diagnosticOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_embedding_search_diagnosticInclude<ExtArgs> | null
  /**
   * Filter, which ai_embedding_search_diagnostic to fetch.
   */
  where?: Prisma.ai_embedding_search_diagnosticWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ai_embedding_search_diagnostics to fetch.
   */
  orderBy?: Prisma.ai_embedding_search_diagnosticOrderByWithRelationInput | Prisma.ai_embedding_search_diagnosticOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ai_embedding_search_diagnostics.
   */
  cursor?: Prisma.ai_embedding_search_diagnosticWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ai_embedding_search_diagnostics from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ai_embedding_search_diagnostics.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ai_embedding_search_diagnostics.
   */
  distinct?: Prisma.Ai_embedding_search_diagnosticScalarFieldEnum | Prisma.Ai_embedding_search_diagnosticScalarFieldEnum[]
}

/**
 * ai_embedding_search_diagnostic findMany
 */
export type ai_embedding_search_diagnosticFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_embedding_search_diagnostic
   */
  select?: Prisma.ai_embedding_search_diagnosticSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_embedding_search_diagnostic
   */
  omit?: Prisma.ai_embedding_search_diagnosticOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_embedding_search_diagnosticInclude<ExtArgs> | null
  /**
   * Filter, which ai_embedding_search_diagnostics to fetch.
   */
  where?: Prisma.ai_embedding_search_diagnosticWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ai_embedding_search_diagnostics to fetch.
   */
  orderBy?: Prisma.ai_embedding_search_diagnosticOrderByWithRelationInput | Prisma.ai_embedding_search_diagnosticOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ai_embedding_search_diagnostics.
   */
  cursor?: Prisma.ai_embedding_search_diagnosticWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ai_embedding_search_diagnostics from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ai_embedding_search_diagnostics.
   */
  skip?: number
  distinct?: Prisma.Ai_embedding_search_diagnosticScalarFieldEnum | Prisma.Ai_embedding_search_diagnosticScalarFieldEnum[]
}

/**
 * ai_embedding_search_diagnostic create
 */
export type ai_embedding_search_diagnosticCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_embedding_search_diagnostic
   */
  select?: Prisma.ai_embedding_search_diagnosticSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_embedding_search_diagnostic
   */
  omit?: Prisma.ai_embedding_search_diagnosticOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_embedding_search_diagnosticInclude<ExtArgs> | null
  /**
   * The data needed to create a ai_embedding_search_diagnostic.
   */
  data: Prisma.XOR<Prisma.ai_embedding_search_diagnosticCreateInput, Prisma.ai_embedding_search_diagnosticUncheckedCreateInput>
}

/**
 * ai_embedding_search_diagnostic createMany
 */
export type ai_embedding_search_diagnosticCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ai_embedding_search_diagnostics.
   */
  data: Prisma.ai_embedding_search_diagnosticCreateManyInput | Prisma.ai_embedding_search_diagnosticCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ai_embedding_search_diagnostic createManyAndReturn
 */
export type ai_embedding_search_diagnosticCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_embedding_search_diagnostic
   */
  select?: Prisma.ai_embedding_search_diagnosticSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ai_embedding_search_diagnostic
   */
  omit?: Prisma.ai_embedding_search_diagnosticOmit<ExtArgs> | null
  /**
   * The data used to create many ai_embedding_search_diagnostics.
   */
  data: Prisma.ai_embedding_search_diagnosticCreateManyInput | Prisma.ai_embedding_search_diagnosticCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_embedding_search_diagnosticIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ai_embedding_search_diagnostic update
 */
export type ai_embedding_search_diagnosticUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_embedding_search_diagnostic
   */
  select?: Prisma.ai_embedding_search_diagnosticSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_embedding_search_diagnostic
   */
  omit?: Prisma.ai_embedding_search_diagnosticOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_embedding_search_diagnosticInclude<ExtArgs> | null
  /**
   * The data needed to update a ai_embedding_search_diagnostic.
   */
  data: Prisma.XOR<Prisma.ai_embedding_search_diagnosticUpdateInput, Prisma.ai_embedding_search_diagnosticUncheckedUpdateInput>
  /**
   * Choose, which ai_embedding_search_diagnostic to update.
   */
  where: Prisma.ai_embedding_search_diagnosticWhereUniqueInput
}

/**
 * ai_embedding_search_diagnostic updateMany
 */
export type ai_embedding_search_diagnosticUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ai_embedding_search_diagnostics.
   */
  data: Prisma.XOR<Prisma.ai_embedding_search_diagnosticUpdateManyMutationInput, Prisma.ai_embedding_search_diagnosticUncheckedUpdateManyInput>
  /**
   * Filter which ai_embedding_search_diagnostics to update
   */
  where?: Prisma.ai_embedding_search_diagnosticWhereInput
  /**
   * Limit how many ai_embedding_search_diagnostics to update.
   */
  limit?: number
}

/**
 * ai_embedding_search_diagnostic updateManyAndReturn
 */
export type ai_embedding_search_diagnosticUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_embedding_search_diagnostic
   */
  select?: Prisma.ai_embedding_search_diagnosticSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ai_embedding_search_diagnostic
   */
  omit?: Prisma.ai_embedding_search_diagnosticOmit<ExtArgs> | null
  /**
   * The data used to update ai_embedding_search_diagnostics.
   */
  data: Prisma.XOR<Prisma.ai_embedding_search_diagnosticUpdateManyMutationInput, Prisma.ai_embedding_search_diagnosticUncheckedUpdateManyInput>
  /**
   * Filter which ai_embedding_search_diagnostics to update
   */
  where?: Prisma.ai_embedding_search_diagnosticWhereInput
  /**
   * Limit how many ai_embedding_search_diagnostics to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_embedding_search_diagnosticIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ai_embedding_search_diagnostic upsert
 */
export type ai_embedding_search_diagnosticUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_embedding_search_diagnostic
   */
  select?: Prisma.ai_embedding_search_diagnosticSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_embedding_search_diagnostic
   */
  omit?: Prisma.ai_embedding_search_diagnosticOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_embedding_search_diagnosticInclude<ExtArgs> | null
  /**
   * The filter to search for the ai_embedding_search_diagnostic to update in case it exists.
   */
  where: Prisma.ai_embedding_search_diagnosticWhereUniqueInput
  /**
   * In case the ai_embedding_search_diagnostic found by the `where` argument doesn't exist, create a new ai_embedding_search_diagnostic with this data.
   */
  create: Prisma.XOR<Prisma.ai_embedding_search_diagnosticCreateInput, Prisma.ai_embedding_search_diagnosticUncheckedCreateInput>
  /**
   * In case the ai_embedding_search_diagnostic was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ai_embedding_search_diagnosticUpdateInput, Prisma.ai_embedding_search_diagnosticUncheckedUpdateInput>
}

/**
 * ai_embedding_search_diagnostic delete
 */
export type ai_embedding_search_diagnosticDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_embedding_search_diagnostic
   */
  select?: Prisma.ai_embedding_search_diagnosticSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_embedding_search_diagnostic
   */
  omit?: Prisma.ai_embedding_search_diagnosticOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_embedding_search_diagnosticInclude<ExtArgs> | null
  /**
   * Filter which ai_embedding_search_diagnostic to delete.
   */
  where: Prisma.ai_embedding_search_diagnosticWhereUniqueInput
}

/**
 * ai_embedding_search_diagnostic deleteMany
 */
export type ai_embedding_search_diagnosticDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ai_embedding_search_diagnostics to delete
   */
  where?: Prisma.ai_embedding_search_diagnosticWhereInput
  /**
   * Limit how many ai_embedding_search_diagnostics to delete.
   */
  limit?: number
}

/**
 * ai_embedding_search_diagnostic without action
 */
export type ai_embedding_search_diagnosticDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ai_embedding_search_diagnostic
   */
  select?: Prisma.ai_embedding_search_diagnosticSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ai_embedding_search_diagnostic
   */
  omit?: Prisma.ai_embedding_search_diagnosticOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ai_embedding_search_diagnosticInclude<ExtArgs> | null
}
